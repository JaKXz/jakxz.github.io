import"./NZTpNUN0.js";import"./C4LJwtm1.js";import{C as o,G as a,Z as i}from"./MC4F4Hfg.js";const r={title:"Yet another react component template",date:"2021-08-30",updated:"2022-07-27",categories:["react","web","dev"],coverImage:"/images/linus-nylund-Q5QspluNZmM-unsplash.jpg",coverWidth:16,coverHeight:9,excerpt:"xkcd standards comic anyone?"},{title:c,date:d,updated:h,categories:m,coverImage:f,coverWidth:u,coverHeight:w,excerpt:y}=r;var n=o(`<p><a href="https://github.com/JaKXz/react-component-template#readme" rel="nofollow">Give it a try for your next react component</a>. I would love feedback! Yes, the irony of the <a href="https://xkcd.com/927" rel="nofollow">xkcd standards comic</a> is not lost on me! :)</p> <h2 id="motivation--philosophy"><a aria-hidden="true" tabindex="-1" href="#motivation--philosophy"><span class="icon icon-link"></span></a>Motivation & Philosophy</h2> <p>I wanted a relatively minimalist [in JS land] starter for publishing a react package.
I loved the simplicity of working with the svelte starter repos in some side projects, and I think keeping a template repository up to date is much easier than the generator approach, having worked on <code>generator-angular-fullstack</code> way back in the day.</p> <p>I also wanted to produce something with the fewest possible opinions baked in / exposed them as much as possible. <code>husky</code>’s pre-commit hook for prettier seemed like a reasonable exception but is also easily removable.</p> <h3 id="alternatives--prior-art--inspirations"><a aria-hidden="true" tabindex="-1" href="#alternatives--prior-art--inspirations"><span class="icon icon-link"></span></a>Alternatives / Prior art / inspirations</h3> <p><a href="https://tsdx.io/" rel="nofollow">tsdx</a> is great, but, their <code>example</code> folder did not work out of the box (at time of writing) & did not quite scratch my itch because it comes with some opinions that are hard to opt out of.
I really like their typescript + storybook starter and I want to eventually include storybook support somehow.</p> <p>The tradeoff is that with this template, <code>microbundle</code> handles a lot of the rollup work under the hood.
It is extensible (you can add your own <code>babel.config.js</code> etc) but the important parts like <a href="https://github.com/developit/microbundle#-features-" rel="nofollow">code optimization</a> are taken care of and are usually “set and forget” anyway.</p> <p>This project is essentially a fork of what you get from <a href="https://www.npmjs.com/package/create-react-library" rel="nofollow">create-react-library</a> without the reliance on an undocumented fork of microbundle and with updated dependencies.
I liked the usage of <code>react-scripts</code> since that is well-maintained and likely going to remain a reliable & simple bootstrap as well as the <code>link:../</code> pattern for the example folder’s dependencies.</p> <h2 id="stack"><a aria-hidden="true" tabindex="-1" href="#stack"><span class="icon icon-link"></span></a>Stack:</h2> <ul><li><a href="https://npm.im/microbundle" rel="nofollow">microbundle</a> for rollup/packaging.</li> <li><a href="https://npm.im/react-scripts" rel="nofollow">react-scripts</a> for local testing and example app build & deploy.</li> <li><a href="https://npm.im/husky" rel="nofollow">husky v7+</a> for git hooks.</li> <li><a href="https://npm.im/prettier" rel="nofollow">prettier</a> & <a href="https://npm.im/pretty-quick" rel="nofollow">pretty-quick</a> for formatting. Add your own prettier config and modify <a href="https://github.com/JaKXz/react-component-template/blob/master/.eslintrc.js" rel="nofollow">eslint config</a> as you please.</li> <li><a href="http://npm.im/typescript" rel="nofollow">typescript</a></li> <li><a href="https://npm.im/react" rel="nofollow">react</a></li></ul>`,1);function k(e){var t=n();i(18),a(e,t)}export{k as default,r as metadata};
