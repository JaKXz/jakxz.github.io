import{S as mt,i as vt,s as yt,F as gt,e as l,c as n,a as i,d as t,b as h,g as f,J as $t,K as Tt,L as xt,q as bt,o as wt,t as s,k as w,w as Ot,h as a,m as _,x as Ct,H as o,y as Pt,B as At,E as Ht}from"./index-effebd35.js";function It(g){let u,p;const y=g[1].default,d=gt(y,g,g[0],null);return{c(){u=l("div"),d&&d.c(),this.h()},l(c){u=n(c,"DIV",{class:!0});var v=i(u);d&&d.l(v),v.forEach(t),this.h()},h(){h(u,"class","callout svelte-1nlj6fc")},m(c,v){f(c,u,v),d&&d.m(u,null),p=!0},p(c,[v]){d&&d.p&&(!p||v&1)&&$t(d,y,c,c[0],p?xt(y,c[0],v,null):Tt(c[0]),null)},i(c){p||(bt(d,c),p=!0)},o(c){wt(d,c),p=!1},d(c){c&&t(u),d&&d.d(c)}}}function Dt(g,u,p){let{$$slots:y={},$$scope:d}=u;return g.$$set=c=>{"$$scope"in c&&p(0,d=c.$$scope)},[d,y]}class St extends mt{constructor(u){super(),vt(this,u,Dt,It,yt,{})}}function Rt(g){let u,p,y,d,c,v,q;return{c(){u=s(`Now, run the commands at the top of this article and you should be good to go!
Remember you will need to `),p=l("code"),y=s("export"),d=s(" your "),c=l("code"),v=s("$PATH"),q=s(" variable in every shell session you want to use a different version of node from the default version.")},l(m){u=a(m,`Now, run the commands at the top of this article and you should be good to go!
Remember you will need to `),p=n(m,"CODE",{});var b=i(p);y=a(b,"export"),b.forEach(t),d=a(m," your "),c=n(m,"CODE",{});var j=i(c);v=a(j,"$PATH"),j.forEach(t),q=a(m," variable in every shell session you want to use a different version of node from the default version.")},m(m,b){f(m,u,b),f(m,p,b),o(p,y),f(m,d,b),f(m,c,b),o(c,v),f(m,q,b)},p:Ht,d(m){m&&t(u),m&&t(p),m&&t(d),m&&t(c),m&&t(q)}}}function jt(g){let u,p,y,d,c,v,q=`<code class="language-bash">brew <span class="token function">install</span> <span class="token function">node</span> node@14 node@16 <span class="token comment"># latest, and all LTS versions at time of writing</span>

brew info node@14 <span class="token comment"># gets the $PATH variable you'll need to use node v14. You will only need the following line:</span>

<span class="token builtin class-name">export</span> <span class="token assign-left variable"><span class="token environment constant">PATH</span></span><span class="token operator">=</span><span class="token string">"/usr/local/opt/node@14/bin:<span class="token environment constant">$PATH</span>"</span> <span class="token comment"># Tada! In this shell session only, node v14 is the executable that will be used first!</span></code>`,m,b,j,k,ye,K,be,we,Y,_e,ke,B,Ee,ge,ae,E,$e,O,J,Te,xe,C,Q,Oe,Ce,U,Pe,Ae,le,$,P,X,He,G,Ie,De,ne,A,Se,H,Re,je,re,z,x,Le,V,Me,qe,Z,ze,Ne,ie,T,We,ee,Fe,Ke,te,Ye,Be,fe,I,ce,N,Je,ue,L,_t=`<code class="language-bash">brew info node@16 <span class="token comment"># for example</span>

<span class="token comment"># put this export at the top of your bashrc, zshrc, or other terminal config to get the default version you want</span>
<span class="token builtin class-name">echo</span> <span class="token string">'export PATH="/usr/local/opt/node@16/bin:$PATH"'</span> <span class="token operator">>></span> ~/.zshrc</code>`,de,he,pe,M,Qe,D,Ue,me;return I=new St({props:{$$slots:{default:[Rt]},$$scope:{ctx:g}}}),{c(){u=l("h2"),p=l("a"),y=l("span"),d=s("TL;DR"),c=w(),v=l("pre"),m=w(),b=l("hr"),j=w(),k=l("p"),ye=s(`If you\u2019re like me, you like to keep your system\u2019s package versions up to date with the latest features and security patches as vigilantly as possible.
So if you\u2019ve had to work with multiple node versions on one development machine, you may have had a hard time keeping both these worlds in sync.
Today I learned/pieced together a way to keep myself sane after dealing with node/npm permission issues for the last time.
This also has only been possible relatively recently (at time of writing) since `),K=l("code"),be=s("node@X"),we=s(" versions have only been recently published as "),Y=l("strong"),_e=s("keg-only"),ke=s(" formulae on "),B=l("code"),Ee=s("brew"),ge=s(" (keg-only is important)."),ae=w(),E=l("p"),$e=s("I have worked with "),O=l("a"),J=l("code"),Te=s("nvm"),xe=s(" and "),C=l("a"),Q=l("code"),Oe=s("n"),Ce=s(` and I don\u2019t want to disparage either because they do work, and even work well at scale, but both have their flaws IMHO.
Since `),U=l("code"),Pe=s("brew"),Ae=s(" manages all my packages for me, why not keep using it?"),le=w(),$=l("h2"),P=l("a"),X=l("span"),He=s("What is a "),G=l("code"),Ie=s("keg-only"),De=s(" formula?"),ne=w(),A=l("p"),Se=s("From "),H=l("a"),Re=s("brew.sh"),je=s(":"),re=w(),z=l("blockquote"),x=l("p"),Le=s("It means the formula is installed only into the Cellar; it is not linked into "),V=l("code"),Me=s("/usr/local"),qe=s(". This means most tools will not find it. We don\u2019t do this for stupid reasons. You can still link in the formula if you need to with "),Z=l("code"),ze=s("brew link"),Ne=s("."),ie=w(),T=l("p"),We=s("Essentially this means that you can have as many versions of node installed on your computer without them conflicting with each other, and as a bonus, your "),ee=l("code"),Fe=s("npm"),Ke=s(` installation!
Tangentially (from my experience), this is another problem that has been solved relatively recently, since `),te=l("code"),Ye=s("npm@latest"),Be=s(" has become much more stable across versions of node."),fe=w(),Ot(I.$$.fragment),ce=w(),N=l("p"),Je=s("If you want to set a different version of node as your default system version:"),ue=w(),L=l("pre"),de=w(),he=l("hr"),pe=w(),M=l("p"),Qe=s("Originally published here: "),D=l("a"),Ue=s("https://jakxz.svbtle.com/manage-node-versions-with-brew"),this.h()},l(e){u=n(e,"H2",{id:!0});var r=i(u);p=n(r,"A",{"aria-hidden":!0,tabindex:!0,href:!0});var oe=i(p);y=n(oe,"SPAN",{class:!0}),i(y).forEach(t),oe.forEach(t),d=a(r,"TL;DR"),r.forEach(t),c=_(e),v=n(e,"PRE",{class:!0});var kt=i(v);kt.forEach(t),m=_(e),b=n(e,"HR",{}),j=_(e),k=n(e,"P",{});var S=i(k);ye=a(S,`If you\u2019re like me, you like to keep your system\u2019s package versions up to date with the latest features and security patches as vigilantly as possible.
So if you\u2019ve had to work with multiple node versions on one development machine, you may have had a hard time keeping both these worlds in sync.
Today I learned/pieced together a way to keep myself sane after dealing with node/npm permission issues for the last time.
This also has only been possible relatively recently (at time of writing) since `),K=n(S,"CODE",{});var Ge=i(K);be=a(Ge,"node@X"),Ge.forEach(t),we=a(S," versions have only been recently published as "),Y=n(S,"STRONG",{});var Ve=i(Y);_e=a(Ve,"keg-only"),Ve.forEach(t),ke=a(S," formulae on "),B=n(S,"CODE",{});var Ze=i(B);Ee=a(Ze,"brew"),Ze.forEach(t),ge=a(S," (keg-only is important)."),S.forEach(t),ae=_(e),E=n(e,"P",{});var R=i(E);$e=a(R,"I have worked with "),O=n(R,"A",{href:!0,rel:!0,target:!0});var et=i(O);J=n(et,"CODE",{});var tt=i(J);Te=a(tt,"nvm"),tt.forEach(t),et.forEach(t),xe=a(R," and "),C=n(R,"A",{href:!0,rel:!0,target:!0});var ot=i(C);Q=n(ot,"CODE",{});var st=i(Q);Oe=a(st,"n"),st.forEach(t),ot.forEach(t),Ce=a(R,` and I don\u2019t want to disparage either because they do work, and even work well at scale, but both have their flaws IMHO.
Since `),U=n(R,"CODE",{});var at=i(U);Pe=a(at,"brew"),at.forEach(t),Ae=a(R," manages all my packages for me, why not keep using it?"),R.forEach(t),le=_(e),$=n(e,"H2",{id:!0});var se=i($);P=n(se,"A",{"aria-hidden":!0,tabindex:!0,href:!0});var lt=i(P);X=n(lt,"SPAN",{class:!0}),i(X).forEach(t),lt.forEach(t),He=a(se,"What is a "),G=n(se,"CODE",{});var nt=i(G);Ie=a(nt,"keg-only"),nt.forEach(t),De=a(se," formula?"),se.forEach(t),ne=_(e),A=n(e,"P",{});var ve=i(A);Se=a(ve,"From "),H=n(ve,"A",{href:!0,rel:!0,target:!0});var rt=i(H);Re=a(rt,"brew.sh"),rt.forEach(t),je=a(ve,":"),ve.forEach(t),re=_(e),z=n(e,"BLOCKQUOTE",{});var it=i(z);x=n(it,"P",{});var W=i(x);Le=a(W,"It means the formula is installed only into the Cellar; it is not linked into "),V=n(W,"CODE",{});var ft=i(V);Me=a(ft,"/usr/local"),ft.forEach(t),qe=a(W,". This means most tools will not find it. We don\u2019t do this for stupid reasons. You can still link in the formula if you need to with "),Z=n(W,"CODE",{});var ct=i(Z);ze=a(ct,"brew link"),ct.forEach(t),Ne=a(W,"."),W.forEach(t),it.forEach(t),ie=_(e),T=n(e,"P",{});var F=i(T);We=a(F,"Essentially this means that you can have as many versions of node installed on your computer without them conflicting with each other, and as a bonus, your "),ee=n(F,"CODE",{});var ut=i(ee);Fe=a(ut,"npm"),ut.forEach(t),Ke=a(F,` installation!
Tangentially (from my experience), this is another problem that has been solved relatively recently, since `),te=n(F,"CODE",{});var dt=i(te);Ye=a(dt,"npm@latest"),dt.forEach(t),Be=a(F," has become much more stable across versions of node."),F.forEach(t),fe=_(e),Ct(I.$$.fragment,e),ce=_(e),N=n(e,"P",{});var ht=i(N);Je=a(ht,"If you want to set a different version of node as your default system version:"),ht.forEach(t),ue=_(e),L=n(e,"PRE",{class:!0});var Et=i(L);Et.forEach(t),de=_(e),he=n(e,"HR",{}),pe=_(e),M=n(e,"P",{});var Xe=i(M);Qe=a(Xe,"Originally published here: "),D=n(Xe,"A",{href:!0,rel:!0,target:!0});var pt=i(D);Ue=a(pt,"https://jakxz.svbtle.com/manage-node-versions-with-brew"),pt.forEach(t),Xe.forEach(t),this.h()},h(){h(y,"class","icon icon-link"),h(p,"aria-hidden","true"),h(p,"tabindex","-1"),h(p,"href","#tldr"),h(u,"id","tldr"),h(v,"class","language-bash"),h(O,"href","https://github.com/creationix/nvm"),h(O,"rel","nofollow noopener noreferrer"),h(O,"target","_blank"),h(C,"href","https://npm.im/n"),h(C,"rel","nofollow noopener noreferrer"),h(C,"target","_blank"),h(X,"class","icon icon-link"),h(P,"aria-hidden","true"),h(P,"tabindex","-1"),h(P,"href","#what-is-a-keg-only-formula"),h($,"id","what-is-a-keg-only-formula"),h(H,"href","https://docs.brew.sh/FAQ#what-does-keg-only-mean"),h(H,"rel","nofollow noopener noreferrer"),h(H,"target","_blank"),h(L,"class","language-bash"),h(D,"href","https://jakxz.svbtle.com/manage-node-versions-with-brew"),h(D,"rel","nofollow noopener noreferrer"),h(D,"target","_blank")},m(e,r){f(e,u,r),o(u,p),o(p,y),o(u,d),f(e,c,r),f(e,v,r),v.innerHTML=q,f(e,m,r),f(e,b,r),f(e,j,r),f(e,k,r),o(k,ye),o(k,K),o(K,be),o(k,we),o(k,Y),o(Y,_e),o(k,ke),o(k,B),o(B,Ee),o(k,ge),f(e,ae,r),f(e,E,r),o(E,$e),o(E,O),o(O,J),o(J,Te),o(E,xe),o(E,C),o(C,Q),o(Q,Oe),o(E,Ce),o(E,U),o(U,Pe),o(E,Ae),f(e,le,r),f(e,$,r),o($,P),o(P,X),o($,He),o($,G),o(G,Ie),o($,De),f(e,ne,r),f(e,A,r),o(A,Se),o(A,H),o(H,Re),o(A,je),f(e,re,r),f(e,z,r),o(z,x),o(x,Le),o(x,V),o(V,Me),o(x,qe),o(x,Z),o(Z,ze),o(x,Ne),f(e,ie,r),f(e,T,r),o(T,We),o(T,ee),o(ee,Fe),o(T,Ke),o(T,te),o(te,Ye),o(T,Be),f(e,fe,r),Pt(I,e,r),f(e,ce,r),f(e,N,r),o(N,Je),f(e,ue,r),f(e,L,r),L.innerHTML=_t,f(e,de,r),f(e,he,r),f(e,pe,r),f(e,M,r),o(M,Qe),o(M,D),o(D,Ue),me=!0},p(e,[r]){const oe={};r&1&&(oe.$$scope={dirty:r,ctx:e}),I.$set(oe)},i(e){me||(bt(I.$$.fragment,e),me=!0)},o(e){wt(I.$$.fragment,e),me=!1},d(e){e&&t(u),e&&t(c),e&&t(v),e&&t(m),e&&t(b),e&&t(j),e&&t(k),e&&t(ae),e&&t(E),e&&t(le),e&&t($),e&&t(ne),e&&t(A),e&&t(re),e&&t(z),e&&t(ie),e&&t(T),e&&t(fe),At(I,e),e&&t(ce),e&&t(N),e&&t(ue),e&&t(L),e&&t(de),e&&t(he),e&&t(pe),e&&t(M)}}}const Mt={title:"Manage node versions with brew",date:"2019-10-24",updated:"2022-04-04",categories:["macos","homebrew","nodejs"],coverImage:"/images/bean-bros-Jaa3KDv9xi4-unsplash.jpeg",coverWidth:16,coverHeight:9,excerpt:"Use homebrew to simply manage your local node installations"};class qt extends mt{constructor(u){super(),vt(this,u,null,jt,yt,{})}}export{qt as default,Mt as metadata};
